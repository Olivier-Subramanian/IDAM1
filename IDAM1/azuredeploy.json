{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VM and Domain"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VM and Domain"
      },
      "defaultValue": "demouser"
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new storage account created to store the VMs disks"
      },
      "defaultValue": "gdsidam007"
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "The type of the Storage Account created"
      },
      "defaultValue": "Standard_LRS"
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the new diagnostic storage account created to store the VMs disks"
      },
      "defaultValue": "gdsidam010"
    },
      "diagnosticStorageAccountType": {
        "type": "string",
        "allowedValues": [
          "Standard_LRS",
          "Standard_GRS",
          "Standard_RAGRS",
          "Premium_LRS"
        ],
        "metadata": {
          "description": "The type of the Diagnostic Storage Account created"
        },
        "defaultValue": "Standard_LRS"
      },
      "location": {
        "type": "string"
      },
      "networkInterfaceNameFront1": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM1 in the front Subnet"
        },
        "defaultValue": "nicf1"
      },
      "networkInterfaceNameBack1": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM1 in the back Subnet"
        },
        "defaultValue": "nicb1"
      },
      "networkInterfaceNameFront2": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM2 in the front Subnet"
        },
        "defaultValue": "nicf2"
      },
      "networkInterfaceNameBack2": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM2 in the back Subnet"
        },
        "defaultValue": "nicb2"
      },
      "networkInterfaceNameFront3": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM3 in the front Subnet"
        },
        "defaultValue": "nicf3"
      },
      "networkInterfaceNameBack3": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM3 in the back Subnet"
        },
        "defaultValue": "nicb3"
      },
      "networkInterfaceNameFront4": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM4 in the front Subnet"
        },
        "defaultValue": "nicf4"
      },
      "networkInterfaceNameBack4": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM4 in the back Subnet"
        },
        "defaultValue": "nicb4"
      },
      "networkInterfaceNameBack5": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM5 in the back Subnet"
        },
        "defaultValue": "nicb5"
      },
      "networkInterfaceNameBack6": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM6 in the back Subnet"
        },
        "defaultValue": "nicb6"
      },
      "networkInterfaceNameFront7": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM7 in the Front Subnet"
        },
        "defaultValue": "nicf7"
      },
      "networkInterfaceNameBack8": {
        "type": "string",
        "metadata": {
          "description": "The name of the NIC attached to the new VM8 in the back Subnet"
        },
        "defaultValue": "nicb8"
      },
      "networkSecurityGroupNameFront": {
        "type": "string"
      },
      "networkSecurityGroupNameBack": {
        "type": "string"
      },
      "publicIpAddressName1": {
        "type": "string",
        "metadata": {
          "description": "The name of the public IP address used by the VM"
        },
        "defaultValue": "pip1"
      },
      "publicIpAddressType1": {
        "type": "string",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "The type of the public IP address used by the VM"
        },
        "defaultValue": "Static"
      },
      "publicIpAddressName2": {
        "type": "string",
        "metadata": {
          "description": "The name of the public IP address used by the VM"
        },
        "defaultValue": "pip2"
      },
      "publicIpAddressType2": {
        "type": "string",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "The type of the public IP address used by the VM"
        },
        "defaultValue": "Static"
      },
      "publicIpAddressName3": {
        "type": "string",
        "metadata": {
          "description": "The name of the public IP address used by the VM"
        },
        "defaultValue": "pip3"
      },
      "publicIpAddressType3": {
        "type": "string",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "The type of the public IP address used by the VM"
        },
        "defaultValue": "Static"
      },
      "publicIpAddressName4": {
        "type": "string",
        "metadata": {
          "description": "The name of the public IP address used by the VM"
        },
        "defaultValue": "pip4"
      },
      "publicIpAddressType4": {
        "type": "string",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "The type of the public IP address used by the VM"
        },
        "defaultValue": "Static"
      },
      "publicIpAddressName7": {
        "type": "string",
        "metadata": {
          "description": "The name of the public IP address used by the VM"
        },
        "defaultValue": "pip7"
      },
      "publicIpAddressType7": {
        "type": "string",
        "allowedValues": [
          "Dynamic",
          "Static"
        ],
        "metadata": {
          "description": "The type of the public IP address used by the VM"
        },
        "defaultValue": "Static"
      },
      "subnetName1": {
        "type": "string",
        "defaultValue": "frontsubnet",
        "metadata": {
          "description": "Name for the front end subnet."
        }
      },
      "subnetName1prefix": {
        "type": "string",
        "defaultValue": "10.0.1.0/24",
        "metadata": {
          "description": "CIDR address prefix for the front end subnet."
        }
      },
      "subnetName2": {
        "type": "string",
        "defaultValue": "backsubnet",
        "metadata": {
          "description": "Name for the back end subnet."
        }
      },
      "subnetName2prefix": {
        "type": "string",
        "defaultValue": "10.0.2.0/24",
        "metadata": {
          "description": "CIDR address prefix for the back end subnet."
        }
      },
      "virtualMachineName1": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "RRAS"
      },
      "virtualMachineSize1": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName2": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "Proxy"
      },
      "virtualMachineSize2": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName3": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "SCCM"
      },
      "virtualMachineSize3": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName4": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "ADDS"
      },
      "virtualMachineSize4": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName5": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "MBAM"
      },
      "virtualMachineSize5": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName6": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "PKI"
      },
      "virtualMachineSize6": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName7": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "RDS"
      },
      "virtualMachineSize7": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "virtualMachineName8": {
        "type": "string",
        "metadata": {
          "description": "The computer name of the VM1"
        },
        "defaultValue": "ADC"
      },
      "virtualMachineSize8": {
        "type": "string",
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "rrasBackendIpAddress": {
        "type": "string",
        "defaultValue": "10.0.2.4",
        "metadata": {
          "description": "IP address for RRAS backend subnet NIC."
        }
      },
      "proxyBackendIpAddress": {
        "type": "string",
        "defaultValue": "10.0.2.5",
        "metadata": {
          "description": "IP address for Proxy backend subnet NIC."
        }
      },
      "VMSize": {
        "type": "string",
        "allowedValues": [
          "Standard_D1",
          "Standard_DS1",
          "Standard_D2",
          "Standard_DS2",
          "Standard_D3",
          "Standard_DS3",
          "Standard_D4",
          "Standard_DS4",
          "Standard_D11",
          "Standard_DS11",
          "Standard_D12",
          "Standard_DS12",
          "Standard_D13",
          "Standard_DS13",
          "Standard_D14",
          "Standard_DS14",
          "Standard_D1_v2",
          "Standard_DS1_v2",
          "Standard_D2_v2",
          "Standard_DS2_v2",
          "Standard_D3_v2",
          "Standard_DS3_v2",
          "Standard_D4_v2",
          "Standard_DS4_v2",
          "Standard_D11_v2",
          "Standard_DS11_v2",
          "Standard_D12_v2",
          "Standard_DS12_v2",
          "Standard_D13_v2",
          "Standard_DS13_v2",
          "Standard_D14_v2",
          "Standard_DS14_v2"
        ],
        "metadata": {
          "description": "The size of the VM Created"
        },
        "defaultValue": "Standard_DS2_v2"
      },
      "imagePublisher": {
        "type": "string",
        "defaultValue": "MicrosoftWindowsServer",
        "metadata": {
          "description": "Image Publisher"
        }
      },
      "imageOffer": {
        "type": "string",
        "defaultValue": "WindowsServer",
        "metadata": {
          "description": "Image Offer"
        }
      },
      "imageSKU": {
        "type": "string",
        "defaultValue": "2016-Datacenter",
        "metadata": {
          "description": "Image SKU"
        }
      },
      "RDPPort": {
        "type": "int",
        "metadata": {
          "description": "The public RDP port for the PDC VM"
        },
        "defaultValue": 3389
      },
      "virtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "The name of the Virtual Network to Create"
        },
        "defaultValue": "gdsidam-vnet"
      },
      "virtualNetworkAddressRange": {
        "type": "string",
        "metadata": {
          "description": "The address range of the new VNET in CIDR format"
        },
        "defaultValue": "10.0.0.0/16"
      },
      "frontEndRouteTableName": {
        "type": "string",
        "defaultValue": "UDR-FrontEnd",
        "metadata": {
          "description": "Name for front end subnet route table."
        }
      },
      "backEndRouteTableName": {
        "type": "string",
        "defaultValue": "UDR-BackEnd",
        "metadata": {
          "description": "Name for back end subnet route table."
        }
      }
    },
  "variables": {
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    "frontEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName1'))]",
    "backEndSubnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName2'))]",
    "apiVer": "2015-06-15"
  },
  "resources": [
    {
      "name": "[parameters('storageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVer')]",
      "dependsOn": [],
      "tags": {
        "displayName": "Storage Account - Simple"
      },
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "name": "[parameters('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('apiVer')]",
      "properties": {
        "accountType": "[parameters('diagnosticStorageAccountType')]"
      },
      "dependsOn": []
    },
    {
      "name": "[parameters('virtualMachineName1')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameFront1'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack1'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize1')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName1')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName1'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameFront1'))]",
              "properties": { "primary": true }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack1'))]",
              "properties": { "primary": false }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName2')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameFront2'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack2'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize2')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName2')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName2'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameFront2'))]",
              "properties": { "primary": false }
            },
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack2'))]",
              "properties": { "primary": true }
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName3')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack3'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName3')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize3')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName3')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName3'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack3'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName4')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack4'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName4')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize4')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName4')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName4'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack4'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },

    {
      "name": "[parameters('virtualMachineName5')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack5'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName5')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize5')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName5')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName5'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack5'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName6')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack6'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName6')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize6')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName6')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName6'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack6'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName7')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameFront7'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName7')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize7')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName7')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName7'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameFront7'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('virtualMachineName8')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceNameBack8'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName8')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "windowsConfiguration": {
            "provisionVmAgent": "true"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize8')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('virtualMachineName8')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/', parameters('virtualMachineName8'), 'osdisk', '.vhd')]"
            }
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceNameBack8'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://',parameters('diagnosticsStorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameFront1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "apiVersion",
        "[variables('apiVer')]",
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]",
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup(),'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "enableIPForwarding": true,
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('rrasBackendIpAddress')]"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameFront2')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName2'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup(),'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName2'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack2')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "enableIPForwarding": true,
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('proxyBackendIpAddress')]"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameFront3')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName3'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup(),'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName3'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack3')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameFront4')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName4'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup(),'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName4'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack4')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack5')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack6')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameFront7')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('frontEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup(),'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName7'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
        }
      }
    },
    {
      "name": "[parameters('networkInterfaceNameBack8')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('backEndSubnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId(resourceGroup(), 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
        }
      }
    },
    {
      "name": "[parameters('publicIpAddressName1')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType1')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName2')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType2')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName3')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType3')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName4')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType4')]"
      }
    },
    {
      "name": "[parameters('publicIpAddressName7')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType7')]"
      }
    },
    {
      "name": "[parameters('networkSecurityGroupNameFront')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "http-rule",
            "properties": {
              "description": "Allow HTTP",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          },
          {
            "name": "https-rule",
            "properties": {
              "description": "Allow HTTPS",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 102,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('networkSecurityGroupNameBack')]",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "[variables('apiVer')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-rdp",
            "properties": {
              "priority": 1000,
              "sourceAddressPrefix": "*",
              "protocol": "TCP",
              "destinationPortRange": "3389",
              "access": "Allow",
              "direction": "Inbound",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "allow-frontend",
            "properties": {
              "description": "Allow Front End Subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('subnetName1prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "block-internet",
            "properties": {
              "description": "Block Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Deny",
              "priority": 100,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('backEndRouteTableName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Route Table - Back End"
      },
      "properties": {
        "routes": [
          {
            "name": "RouteToFrontEnd",
            "properties": {
              "addressPrefix": "[parameters('subnetName1prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('proxyBackendIpAddress')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/routeTables",
      "name": "[parameters('frontEndRouteTableName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "UDR - FrontEnd"
      },
      "properties": {
        "routes": [
          {
            "name": "RouteToBackEnd",
            "properties": {
              "addressPrefix": "[parameters('subnetName2prefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('rrasBackendIpAddress')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "[variables('apiVer')]",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameFront'))]",
        "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupNameBack'))]",
        "[concat('Microsoft.Network/routeTables/', parameters('frontEndRouteTableName'))]",
        "[concat('Microsoft.Network/routeTables/', parameters('backEndRouteTableName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('virtualNetworkAddressRange')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName1')]",
            "properties": {
              "addressPrefix": "[parameters('subnetName1prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameFront'))]"
              }
            }
          },
          {
            "name": "[parameters('subnetName2')]",
            "properties": {
              "addressPrefix": "[parameters('subnetName2prefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupNameBack'))]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}
